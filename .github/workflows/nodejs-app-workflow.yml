name: CICD-Deployment_Using_GitHub_Actions

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: [ ubuntu-latest ]
    steps:
      - name: Checkout source
        uses: actions/checkout@v3

      - name: Create .env file
        run: |
          echo "NEXT_PUBLIC_BASE_URL" = ${{ secrets.NEXT_PUBLIC_BASE_URL }} >> .env
          echo "NEXT_PUBLIC_DOMAIN_URL" = ${{ secrets.NEXT_PUBLIC_DOMAIN_URL }  >> .env
          echo "NEXT_PUBLIC_GOOGLE_PLACE_KEY" = ${{ secrets.NEXT_PUBLIC_GOOGLE_PLACE_KEY }} >> .env
          echo "NEXT_PUBLIC_PAGINATION_OFFSET_COUNT" = ${{ secrets.NEXT_PUBLIC_PAGINATION_OFFSET_COUNT }} >> .env
          echo "NEXT_PUBLIC_PHONE_NUMBER_LENGTH" = ${{ secrets.NEXT_PUBLIC_PHONE_NUMBER_LENGTH }} >> .env
          echo "NEXT_PUBLIC_PROFILE_PATH_END" = ${{ secrets.NEXT_PUBLIC_PROFILE_PATH_END }} >> .env
          echo "NEXT_PUBLIC_PROFILE_PATH_START" = ${{ secrets.NEXT_PUBLIC_PROFILE_PATH_START }} >> .env
          echo "NEXT_PUBLIC_RECAPTCHA_KEY" = ${{ secrets.NEXT_PUBLIC_RECAPTCHA_KEY }} >> .env
          echo "NEXT_PUBLIC_TIDIO_KEY" = ${{ secrets.NEXT_PUBLIC_TIDIO_KEY }} >> .env
          echo "PHONE_NUMBER_LENGTH" = ${{ secrets.PHONE_NUMBER_LENGTH }} >> .env

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: 'ap-southeast-2'

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
        with:
          mask-password: 'true'
          
      - name: Build, tag, and push image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_TAG: ${{ github.sha }}
          REPOSITORY: nodejs-poc
        run: |
          docker build -t $ECR_REGISTRY/$REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$REPOSITORY:$IMAGE_TAG
          echo "image=$ECR_REGISTRY/$REPOSITORY:$IMAGE_TAG" >> $GITHUB_OUTPUT    

      - name: Fill in the new image ID in the Amazon ECS task definition
        id: task-def
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition: node-js_task-DefinitionPOC.json
          container-name: nodepoc
          image: ${{ steps.build-image.outputs.image }}

      - name: Deploy Amazon ECS task definition
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          task-definition: ${{ steps.task-def.outputs.task-definition }}
          service: nodejs-app-poc
          cluster: nodejs_Cluster
          wait-for-service-stability: true




          
